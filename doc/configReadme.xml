<?xml version="1.0"?>
<configuration>
	<placeholders>
		<placeholder id="template_name">SAP to Salesforce Contact Broadcast</placeholder>
	</placeholders>
	<sections>
		<section id="use_case">
This Anypoint Template should serve as a foundation for setting an online sync of Customer's Contacts from SAP to Salesforce Contacts in manner of push notification. Every time there is a new Contact or a change in an already existing one, SAP will send the IDoc with it to the running template which will update/create a Contact in the Salesforce target instance. 

Requirements have been set not only to be used as examples, but also to establish a starting point to adapt your integration to your requirements.

As implemented, this Anypoint Template leverages the [Batch Module](http://www.mulesoft.org/documentation/display/current/Batch+Processing). The batch job is divided in Input, Process and On Complete stages.

The integration is triggered by an inbound SAP endpoint listening for incoming IDOC **DEBMAS01** messages including information about Customer's Contacts. This XML is passed to the batch process and transformed to a Salesforce Contact.

In this template you may to choose whether Account for Contact should be created as well during the process. 
This functionality relies on a standard BAPI for retrieving details about customers: **BAPI_CUSTOMER_GETDETAIL2**
		</section>
		<section id="considerations">
		<![CDATA[
To make this Anypoint Template run, there are certain preconditions that must be considered.
All of them deal with the preparations in both source (SAP) and destination (SFDC) systems, that must be made in order for all to run smoothly.
**Failling to do so could lead to unexpected behavior of the template.**

Before continue with the use of this Anypoint Template, you may want to check out this [Documentation Page](http://www.mulesoft.org/documentation/display/current/SAP+Connector#SAPConnector-EnablingYourStudioProjectforSAP), that will teach you how to work 
with SAP and Anypoint Studio-

## Disclaimer

This Anypoint template uses a few private Maven dependencies in oder to work. If you intend to run this template with Maven support, please continue reading.

You will find that there are three dependencies in the pom.xml file that begin with the following group id: 
	**com.sap.conn.jco** 
These dependencies are private for Mulesoft and will cause you application not to build from a Maven command line. You need to replace them with "provided" scope and copy the libraries into the build path.
]]>
		</section>
		<section id="sap_src">
<![CDATA[
The Partner profile needs to have a customized type of logical system set as partner type. An outbound parameter of message type MATMAS should be defined in the partner profile. A RFC destination created earlier should be defined as Receiver Port. Idoc Type base type should be set as MATMAS01.
]]>
		</section>
		<section id="running_on_studio">
		<![CDATA[
In order to make this Anypoint Template run on Mule Studio there are a few extra steps that needs to be made.
Please check this Documentation Page:

+ [Enabling Your Studio Project for SAP](http://www.mulesoft.org/documentation/display/current/SAP+Connector#SAPConnector-EnablingYourStudioProjectforSAP)
		]]>
		</section>
		<section id="application_configuration">
		<![CDATA[
**SAP Connector configuration**

+ sap.jco.ashost=your.sap.address.com
+ sap.jco.user=SAP_USER
+ sap.jco.passwd=SAP_PASS
+ sap.jco.sysnr=14
+ sap.jco.client=800
+ sap.jco.lang=EN

**SAP Endpoint configuration**

+ sap.jco.connectioncount=2
+ sap.jco.gwhost=your.sap.addres.com
+ sap.jco.gwservice=sapgw14
+ sap.jco.idoc.programid=PROGRAM_ID

**SalesForce Connector configuration**

+ sfdc.username=bob.dylan@sfdc
+ sfdc.password=DylanPassword123
+ sfdc.securityToken=avsfwCUl7apQs56Xq2AKi3X
+ sfdc.url=https://test.salesforce.com/services/Soap/u/28.0

**SMPT Services configuration**

+ smtp.host=smtp.gmail.com
+ smtp.port=587
+ smtp.user=gmailuser
+ smtp.password=gmailpassword

**Mail details**

+ mail.from=your.email@gmail.com
+ mail.to=your.email@gmail.com
+ mail.subject=Mail subject

**Policy for creating accounts in SF syncAccount, doNotCreateAccount**

+ account.sync.policy=syncAccount
]]>
		</section>
		<section id="api_calls">
		<![CDATA[
SalesForce imposes limits on the number of API Calls that can be made.
Therefore calculating this amount may be an important factor to
consider. Product Broadcast Template calls to the API can be
calculated using the formula:

**X * 3 + X / 200**

Being X the number of Contacts to be synchronized on each run.

Multiplication by 3 is because for every user if account.sync.policy is set to value **syncAccounts** for every contact will be checked
if an account with matching name exists in Salesforce and if not it will be created.

The division by 200 is because, by default, contacts are gathered in groups
of 200 for each Upsert API Call in the commit step. 

For instance if 10 records are fetched from origin instance, then 1 api
calls to SFDC will be made ( 1).
]]>
		</section>
		
	</sections>
</configuration>